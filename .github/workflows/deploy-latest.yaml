# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build, Publish, and Deploy

on:
  push:
    branches:
    - master
    - feature/#1-setup

env:
  ENVIRONMENT: latest
  GKE_CLUSTER: monthly-deeplearning-cluster
  GKE_ZONE: us-west1-a

jobs:
  build-publish-deploy:
    name: Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup gcloud
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    - name: Login to Github Package
      env:
        REGISTRY: docker.pkg.github.com
        USERNAME: dreamgonfly
        PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      run: |
        docker login $REGISTRY -u $USERNAME --password $PASSWORD

    - name: Build Image
      id: build-image
      env:
        REGISTRY: docker.pkg.github.com
        OWNER: hephaestusproject
        REPOSITORY: pytorch-char-lm # repository name must be lowercase
        IMAGE_NAME: char-lm-server
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker pull $REGISTRY/$OWNER/$REPOSITORY/$IMAGE_NAME:$ENVIRONMENT || true
        docker build . --file char-lm-server.Dockerfile --tag $REGISTRY/$OWNER/$REPOSITORY/$IMAGE_NAME:$IMAGE_TAG --cache-from $REGISTRY/$OWNER/$REPOSITORY/$IMAGE_NAME:$ENVIRONMENT
        echo "::set-output name=image_name::$REGISTRY/$OWNER/$REPOSITORY/$IMAGE_NAME:$IMAGE_TAG"

    - name: Test Image
      id: test-image
      env:
        REGISTRY: docker.pkg.github.com
        OWNER: hephaestusproject
        REPOSITORY: pytorch-char-lm # must be lowercase
        IMAGE_NAME: char-lm-server
        IMAGE_TAG: ${{ github.sha }}
      run: |
        CONTAINER_ID=$(docker run -d --rm --env ENVIRONMENT $REGISTRY/$OWNER/$REPOSITORY/$IMAGE_NAME:$IMAGE_TAG)
        docker exec $CONTAINER_ID pytest

    - name: Publish
      env:
        REGISTRY: docker.pkg.github.com
        OWNER: hephaestusproject
        REPOSITORY: pytorch-char-lm # must be lowercase
        IMAGE_NAME: char-lm-server
        IMAGE_TAG: ${{ github.sha }}
        HELM_RELEASE_NAME: char-lm
      run: |
        docker push $REGISTRY/$OWNER/$REPOSITORY/$IMAGE_NAME:$IMAGE_TAG
        # For caching
        docker tag $REGISTRY/$OWNER/$REPOSITORY/$IMAGE_NAME:$IMAGE_TAG $REGISTRY/$OWNER/$REPOSITORY/$IMAGE_NAME:$ENVIRONMENT
        docker push $REGISTRY/$OWNER/$REPOSITORY/$IMAGE_NAME:$ENVIRONMENT

#    - name: Deploy Helm Chart
#      uses: WyriHaximus/github-action-helm3@v2.0
#      with:
#        exec: helm upgrade $HELM_RELEASE_NAME ./.helm/app/ --install --wait --atomic --namespace=APP_NAMESPACE --set=app.name=APP_NAME --values=./.helm/app/values.yaml
#        kubeconfig: '${{ secrets.KUBECONFIG }}'

#    - name: Deploy Helm Chart
#      env:
#        HELM_RELEASE_NAME: char-lm
#        KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
#      uses: 'deliverybot/helm@v1'
#      with:
#        release: $HELM_RELEASE_NAME
#        namespace: ${{ env.ENVIRONMENT }}
#        chart: example-chart-${{ env.HELM_VERSION }}.tgz
#        token: '${{ github.token }}'
#        helm: helm3
#        values: |
#          image_tag: ${{ github.sha }}
#          environment: ${{ env.ENVIRONMENT }}
#
